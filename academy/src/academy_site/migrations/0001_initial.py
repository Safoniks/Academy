# Generated by Django 2.0 on 2018-02-14 15:51

import academy_site.models
import academy_site.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=academy_site.models.get_user_photo_path)),
                ('join_date', models.DateTimeField(auto_now_add=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'authenticated user',
                'verbose_name_plural': 'authenticated users',
                'db_table': 'auth_user',
                'permissions': (('some_perm', 'custom permission'),),
            },
        ),
        migrations.CreateModel(
            name='AdminProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook_link', models.URLField(blank=True, null=True)),
                ('instagram_link', models.URLField(blank=True, null=True)),
                ('other_link', models.URLField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('last_update', models.DateTimeField(auto_now_add=True)),
                ('auth_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'admin profile',
                'verbose_name_plural': 'admin profiles',
                'db_table': 'admin_profile',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('short_description', models.TextField()),
                ('full_description', models.TextField()),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('photo', models.ImageField(upload_to=academy_site.models.get_city_photo_path)),
                ('location', models.CharField(max_length=100)),
                ('last_update', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'city',
                'verbose_name_plural': 'cities',
                'db_table': 'city',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True)),
                ('description', models.TextField()),
                ('practise_info', models.TextField()),
                ('location', models.CharField(max_length=100)),
                ('photo', models.ImageField(upload_to=academy_site.models.get_course_photo_path)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('price_description', models.CharField(blank=True, max_length=100, null=True)),
                ('seats', models.IntegerField(validators=[academy_site.validators.positive_number])),
                ('remaining_seats', models.IntegerField(blank=True, validators=[academy_site.validators.positive_number])),
                ('status', models.CharField(choices=[('planned', 'planned'), ('available', 'available'), ('cancelled', 'cancelled'), ('sold-out', 'sold-out'), ('archived', 'archived')], max_length=10)),
            ],
            options={
                'verbose_name': 'course',
                'verbose_name_plural': 'courses',
                'db_table': 'course',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academy_site.Course')),
            ],
            options={
                'verbose_name': 'lesson',
                'verbose_name_plural': 'lessons',
                'db_table': 'lesson',
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('link', models.URLField()),
                ('logo', models.ImageField(upload_to=academy_site.models.get_partner_logo_path)),
                ('is_general', models.BooleanField()),
                ('last_update', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'partner',
                'verbose_name_plural': 'partners',
                'db_table': 'partner',
            },
        ),
        migrations.CreateModel(
            name='SiteUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(blank=True, max_length=50, null=True)),
                ('mother_language', models.CharField(blank=True, max_length=50, null=True)),
                ('postcode', models.IntegerField(blank=True, null=True)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('confirmation_code', models.CharField(max_length=64)),
                ('confirmation_code_expires', models.DateTimeField()),
                ('auth_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'site user',
                'verbose_name_plural': 'site users',
                'db_table': 'site_user',
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=academy_site.models.get_theme_photo_path)),
                ('last_update', models.DateTimeField(auto_now_add=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academy_site.City')),
            ],
            options={
                'verbose_name': 'theme',
                'verbose_name_plural': 'themes',
                'db_table': 'theme',
            },
        ),
        migrations.CreateModel(
            name='UserCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('know_academy_through', models.CharField(blank=True, max_length=100, null=True)),
                ('questions', models.CharField(blank=True, max_length=100, null=True)),
                ('rate', models.IntegerField(default=0)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academy_site.Course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academy_site.SiteUser')),
            ],
            options={
                'verbose_name': 'user course',
                'verbose_name_plural': 'user courses',
                'db_table': 'user_course',
            },
        ),
        migrations.AddField(
            model_name='siteuser',
            name='courses',
            field=models.ManyToManyField(through='academy_site.UserCourse', to='academy_site.Course'),
        ),
        migrations.AddField(
            model_name='course',
            name='partners',
            field=models.ManyToManyField(to='academy_site.Partner'),
        ),
        migrations.AddField(
            model_name='course',
            name='teachers',
            field=models.ManyToManyField(to='academy_site.AdminProfile'),
        ),
        migrations.AddField(
            model_name='course',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academy_site.Theme'),
        ),
        migrations.AddField(
            model_name='city',
            name='partners',
            field=models.ManyToManyField(to='academy_site.Partner'),
        ),
        migrations.AddField(
            model_name='authuser',
            name='city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='academy_site.City'),
        ),
        migrations.AddField(
            model_name='authuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='authuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='usercourse',
            unique_together={('user', 'course')},
        ),
        migrations.AlterUniqueTogether(
            name='theme',
            unique_together={('city', 'slug'), ('city', 'name')},
        ),
    ]
